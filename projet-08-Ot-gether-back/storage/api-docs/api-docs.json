{
    "openapi": "3.0.0",
    "info": {
        "title": "Ot'gether API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin/categories": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of categories",
                "operationId": "48cfaa7170afec6cf86a79a6c0dff452",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "session": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create one new category",
                "operationId": "1045104c0f234aaa53facdf2c66bb7ba",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "name category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category create success"
                    },
                    "422": {
                        "description": "Add category error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/categories/{category}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Create one category",
                "operationId": "09943a71c052a7d746f462b79a3c199f",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "category not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete one category by id",
                "operationId": "a6b045ab91ce19f59363f5fde0aaa06b",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update one category by id",
                "operationId": "8f4dc589b179d3f5386d053aea3db97f",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "query",
                        "description": "ID of category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "422": {
                        "description": "Update category error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/admin/events": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of admin events",
                "operationId": "33cffc35c432f8f628a200aec54badbf",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of items per page (default is 15)",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of admin events"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Register a new event admin",
                "operationId": "88b4fae6877c237312d092bf25b4122e",
                "parameters": [
                    {
                        "name": "isIRl",
                        "in": "query",
                        "description": "Is event in Real Life",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Event title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categorie",
                        "in": "query",
                        "description": "Event category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant_min",
                        "in": "query",
                        "description": "Event minimal participant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "participant_max",
                        "in": "query",
                        "description": "Event maximum participant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Event start date",
                        "required": true,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Event's inscription end date",
                        "required": true,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Event city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Event region",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Event address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event registered successfully"
                    },
                    "422": {
                        "description": "Add event error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/admin/events/{event}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get one admin event",
                "operationId": "056bec188d17cecf4a0dd69ade78f98d",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "ID of the admin event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin event details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Admin event not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Delete one admin event",
                "operationId": "97a0e03b97fdca2b3c830154b9dc5acd",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "ID of the admin event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Admin event deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Admin event not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update one admin event",
                "operationId": "0ddcbde4ad98f76d9ddaff15fc22b1b5",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "ID of the admin event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin event updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Admin event not found"
                    }
                }
            }
        },
        "/api/admin/tags": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of tags",
                "operationId": "4f48f7783cc8d15e4b5e3a0796c3240f",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of users",
                "operationId": "895101ef1a579f1e11fb7d2ffac04d5b",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of items per page (default is 15)",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "summary": "Register a new user",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "parameters": [
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "User's lastname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "User's firstname",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pseudo",
                        "in": "query",
                        "description": "User's pseudo",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "User's city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "confirmPassword",
                        "in": "query",
                        "description": "User's confirm password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/check-email": {
            "post": {
                "summary": "Verify if an email is already used",
                "operationId": "0a37eff402242460d34b78324e6c75e3",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "email"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "isUsed"
                    },
                    "422": {
                        "description": "Errors"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get list of categories",
                "operationId": "ac9c4d978ea4e5b72915ca9728e5b8b1",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Register a new category",
                "operationId": "cca49a87d9b0ebb9a98ad7c154b71737",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Category's name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a category by id",
                "operationId": "ff3ab984d3fe877eb16da6009394d694",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of category to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category by id",
                "operationId": "88c22abd8149aea4b3bdcb280a0fddf7",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a category by id",
                "operationId": "5afb9969f22296ff47a6d827a9028b9c",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Category name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/events/{event}/messages": {
            "get": {
                "tags": [
                    "Chat"
                ],
                "summary": "Get all messages from an event",
                "operationId": "a4cb12c211432ae272e4a77641c1b84d",
                "parameters": [
                    {
                        "name": "event",
                        "in": "query",
                        "description": "ID of event to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Send a message to an event",
                "operationId": "6a75cca5a67e711561da5a37dad38b36",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of event to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Content of the message",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message sent"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get list of events",
                "operationId": "e529c81e6aaec82f49950a87ed881f57",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of items per page (default is 15)",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Register a new event",
                "operationId": "e958e1c6c275d5f9b7ebcd837903d0ef",
                "parameters": [
                    {
                        "name": "isIRl",
                        "in": "query",
                        "description": "Is event in Real Life",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Event title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categorie",
                        "in": "query",
                        "description": "Event category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant_min",
                        "in": "query",
                        "description": "Event minimal participant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "participant_max",
                        "in": "query",
                        "description": "Event maximum participant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Event start date",
                        "required": true,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Event's inscription end date",
                        "required": true,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Event city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Event region",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Event address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event registered successfully"
                    },
                    "422": {
                        "description": "Add event error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/events/{event}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get an event by id",
                "operationId": "2f5e4d4d8d7989ca1f72be9c20d9daac",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of event to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "Event not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event by id",
                "operationId": "b9043fb311444b3c3bcb101e1a643a9f",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of event to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "Event not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event by id",
                "operationId": "058f62e5c916b4cca5f1c063717b7ec4",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of event to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "isIRl",
                        "in": "query",
                        "description": "Is event in Real Life",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Event title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categorie",
                        "in": "query",
                        "description": "Event category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "participant_min",
                        "in": "query",
                        "description": "Event minimal participant",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "participant_max",
                        "in": "query",
                        "description": "Event maximum participant",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Event start date",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Event's inscription end date",
                        "required": false,
                        "schema": {
                            "type": "date"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Event city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Event region",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Event address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "422": {
                        "description": "Update event error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/events/{event}/participate": {
            "post": {
                "tags": [
                    "Participate"
                ],
                "summary": "Add User Auth paticipate at an Event",
                "description": "Add User Auth paticipate at an Event.",
                "operationId": "29217c904c6350f358d471c5c461f984",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "ID of event to participate",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User participate at an event"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Participate"
                ],
                "summary": "Remove User Auth paticipate at an Event",
                "description": "Remove User Auth paticipate at an Event.",
                "operationId": "c35d70f1269aad7c28b618e30a080711",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "ID of event to participate",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User participate at an event"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/api/events/{event}/report": {
            "post": {
                "tags": [
                    "Report"
                ],
                "summary": "Report an event",
                "operationId": "32f0ab6c76bc9739ce1eab37566af720",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "ID of event to report",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "message",
                        "in": "query",
                        "description": "Message to send with the report",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event reported"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/api/tags": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get list of tags",
                "operationId": "65f85cc85cd13d2454b6c88ffff5cc3a",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Register a new tag",
                "operationId": "467bf3e5824fd78f9cdfb70c0ba9b172",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Tag's name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tag created successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/tags/{tag}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get a tag by id",
                "operationId": "890706647a0186ae7289ff232e056564",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "ID of tag to return",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete a tag by id",
                "operationId": "d3741650499e47b0c4644657896e80bc",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "ID of tag to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update a tag by id",
                "operationId": "bbe383346f5285711681b6e399a1137e",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "ID of tag to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Tag name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a list of users",
                "operationId": "566aed8efb436ca506e0ef51a032ecd9",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of items per page (default is 15)",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a user by ID",
                "operationId": "f310aa35b9243239c65dbc8b8f4b135e",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a user by ID",
                "operationId": "f1f65c5e73cb0b10fdd850447b672c28",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "lastname",
                        "in": "query",
                        "description": "User lastname",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "firstname",
                        "in": "query",
                        "description": "User firstname",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "User city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pseudo",
                        "in": "query",
                        "description": "User pseudo",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User email",
                        "required": false,
                        "schema": {
                            "type": "email"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User password",
                        "required": false,
                        "schema": {
                            "type": "password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user by ID",
                "operationId": "cf641f0b739211ff3a1c21b1ef310591",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/my-events": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the events associated with the authenticated user",
                "operationId": "f978aa8a9600b2a79f6e1676d3a20937",
                "responses": {
                    "200": {
                        "description": "List of events associated with the user"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "An error occurred"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}